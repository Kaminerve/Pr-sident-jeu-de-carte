# Note : probabilité de réussir : 400% de chances

import random

class Devine_carte :
    """
    Jeu où l'on doit deviner la carte
    """

    def __init__(self):
        self.liste_carte = ["3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", 'K', 'A', "2", "joker"]
        self.jeu_de_carte = {"♥": ["3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", 'K', 'A', "2"],
                             "♦": ["3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", 'K', 'A', "2"],
                             "♠": ["3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", 'K', 'A', "2"],
                             "♣": ["3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", 'K', 'A', "2"],
                             "joker": ["rouge", "noir"]
                             }
        self.carte_utilisee = []
        self.liste_tours_moyen = []
        self.tours_moyen = 0
        self.jeu_avec_nom = []

        self.nb_parties = int(input("Tapez le nombre de parties que vous voulez jouer : "))

    def stats(self):
        for i in range(1, self.nb_parties + 1) :
            for k in self.jeu_de_carte:
                for v in self.jeu_de_carte[k]:
                    if k == "joker":
                        self.jeu_avec_nom.append(f"{k} {v}")
                    else:
                        self.jeu_avec_nom.append(f"{v} de {k}")
            running = True
            self.liste_tours_moyen = []
            while running :
                random.shuffle(self.jeu_avec_nom)
                carte_a_trouve = random.choice(self.jeu_avec_nom)
                indice = random.randint(1, len(self.jeu_avec_nom) - 1)
                if carte_a_trouve == self.jeu_avec_nom[indice] :
                    self.liste_tours_moyen.append(self.jeu_avec_nom[indice])
                    running = False
                    print(i)
                    self.tours_moyen += len(self.liste_tours_moyen)
                elif len(self.jeu_avec_nom) == 1 :
                    running = False
                    print(i, "perdu")
                else :
                    self.liste_tours_moyen.append(self.jeu_avec_nom.pop(indice))
        self.tours_moyen /= self.nb_parties
        round(self.tours_moyen)
        return self.tours_moyen


jeu = Devine_carte()
print(jeu.stats())
